<h2>Transfers Board</h2>

<!-- <ul>
    <% ongoing_downloads.forEach(download => { %>
      <li>
        <%= download.name %> - <%= download.status %>
        <% if (download.status === 'Downloading') { %>
            , Percentage Downloaded : <%= download.Size %> %
        <% } %>
      </li>
    <% }) %>
  </ul> -->

  <table class="table">
    <thead>
      <tr>
        <th>Name</th>
        <th>Status</th>
        <th>Percentage Downloaded</th>
      </tr>
    </thead>
    <tbody>
      <% ongoing_downloads.forEach(download => { %>
        <tr>
          <td><%= download.name %></td>
          <td><%= download.status %></td>
          <% if (download.status === 'Downloading') { %>
            <td><%= download.Size %></td>
          <% } else { %>
            <td>-</td>
          <% } %>
        </tr>
      <% }) %>
    </tbody>
  </table>
<<<<<<< HEAD

  <!-- <table class="table">
    <thead>
      <tr>
        <th>Name</th>
        <th>Status</th>
        <th>Percentage Downloaded</th>
      </tr>
    </thead>
    <tbody id="table-body">
    </tbody>
  </table>


  <script>
        function getOngoingDownloads() {
      $.ajax({
        url: "/transfers",
        type: "GET",
        dataType: "json",
        success: function (data) {
          // Update the table with the new data
          updateTable(data.ongoing_downloads);
        },
        error: function (xhr, status, error) {
          console.log("Error: " + error);
        },
      });
    }

        setInterval(function () {
      getOngoingDownloads();
    }, 500);

        function updateTable(ongoing_downloads) {
      var tbody = $("#table-body");
      tbody.empty();
      ongoing_downloads.forEach(function (download) {
        var row = $("<tr>");
        row.append($("<td>").text(download.name));
        row.append($("<td>").text(download.status));
        row.append($("<td>").text(download._progress));
        tbody.append(row);
      });
    }

  </script> -->

  
=======
  <script>
    function updateProgressBars() {
      // Make an Ajax request to the backend server
      fetch('/progress')
        .then(response => response.json())
        .then(data => {
          // Update progress bars based on the received data
          data.forEach(progress => {
            const progressBar = document.getElementById(progress.id);
            progressBar.style.width = progress.value + '%';
          });
          
          // Repeat the process after a delay
          setTimeout(updateProgressBars, 1000);
        });
    }
    
    // Start updating progress bars
    updateProgressBars();
  </script>
>>>>>>> download_transfer_logout/download_transfer_logout
